gcp ssh接続
gcloud compute ssh bc-1 --zone us-central1-c

プロジェクトディレクトリ
cd ~/projects/blockchain

仮想環境の有効か
source venv/bin/activate

gcloud compute ssh bc-1 --zone=us-central1-c --ssh-flag="-L 8000:localhost:8000"
なんかろーかるのPCにポートフォワーディングしてる
ポートワーディングとは、ローカルPCの8000番ポートをgcpのbc-1の8000番ポートに転送すること

# ファイルを転送bc-1（pklファイルと個人の完璧メモを除く）
gcloud compute scp blockchain.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp fast_api.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp main.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp transaction.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp requirements.txt bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp get_transactions.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp hash_test.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp mining.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp node_list.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp post_transaction.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp reuse_transactions.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp show_accounts.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp sign_transaction.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp signature.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp verify_transaction.py bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp memo.txt bc-1:/home/n6321/projects/blockchain/ --zone us-central1-c

# ファイルを転送bc-2（pklファイルと個人の完璧メモを除く）
gcloud compute scp blockchain.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp fast_api.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp main.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp transaction.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp requirements.txt bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp get_transactions.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp hash_test.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp mining.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp node_list.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp post_transaction.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp reuse_transactions.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp show_accounts.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp sign_transaction.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp signature.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp verify_transaction.py bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c
gcloud compute scp memo.txt bc-2:/home/n6321/projects/blockchain/ --zone us-central1-c

ブラウザから開けない原因
ファイヤーウォールルールの設定
解決策：ファイヤーウォールルールを適切に設定する

サーバーが再起動したせいで外部アドレスが変わった
ブラウザのリロール
or
コマンドから外部アドレスを取得
gcloud compute instances describe bc-1 --zone us-central1-c --format="get(networkInterfaces[0].accessConfigs[0].natIP)"


利用可能なユーザーを確認
cat /etc/passwd | grep /bin/bash


ユーザーを切り替える
# 既存のユーザーに切り替え
sudo su - [ユーザー名]

# 例
sudo su - n6321

既存のblockchain.pyをNFT対応に拡張（NFTデータ構造追加、NFT転送機能、NFT作成機能）
NFT情報管理用のデータファイル構造を設計（nft_data.pkl形式、画像URL、所有者、価格等）
FastAPIでNFT販売所のAPIエンドポイント作成（一覧表示、購入、作成、ユーザーNFT表示）
画像アップロード機能の実装（ローカル保存、static配信設定）
mining.pyと連携してマイニング報酬でアカウント残高を付与する仕組み
NFT購入時の残高チェック機能（既存のaccount_calc関数活用）
シンプルなWeb UI作成（NFT一覧、詳細、購入ボタン、マイニングボタン）
GCPデプロイ用の設定ファイル作成（app.yaml、requirements.txt更新）
サンプルNFTデータの準備（学校用のテスト画像、適切な価格設定）
学校での使用説明書作成（マイニング方法、NFT購入方法、操作手順）
GCPにデプロイしてテスト（複数ユーザーでの動作確認、マイニング→購入フロー確認）
学校での実演準備（デモシナリオ作成、トラブル対応準備）